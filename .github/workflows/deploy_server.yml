name: Deploy Backend server

on:
  push:
    branches:
      - deploy
    # paths:
    #   - 'apps/server/**'

env:
  ACR_REPOSITORY: "l3-api-ai"

jobs:
  Build:
    name: Build Application Container
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.build-image.outputs.TAG_NAME }}
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.ACR_REGISTRY }}
          username: ${{ secrets.AZURE_USERNAME }}
          password: ${{ secrets.AZURE_PASSWORD }}
      - run: |
           docker build -t ${{ vars.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }} -f apps/sever/docker/Dockerfile .
           docker push ${{ vars.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }}
           echo "TAG_NAME=${{ github.sha }}" >> $GITHUB_ENV

  
  Plan_dev:
    needs: Build
    if: github.ref == 'refs/heads/main'
    uses: l3vels/L3AGI/.github/workflows/tf_plan_server.yml@deploy
    with:
      path: apps/server/terraform
      tf_vars_file: varfiles/dev.tfvars
      gh_environment: dev
      task_container_name: "l3-api-ai"
      task_container_version: ${{ github.sha }}
      task_container_registry: ${{ vars.ACR_REGISTRY }}
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      azure_acr_username: ${{ secrets.AZURE_USERNAME }}
      azure_acr_password: ${{ secrets.AZURE_PASSWORD }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure_client_id: "${{ secrets.AZURE_CLIENT_ID }}"
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      github_personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  Deploy_dev:
    needs: [Build, Plan_dev]
    uses: l3vels/L3AGI/.github/workflows/tf_apply_server.yml@deploy
    with:
      path: apps/server/terraform
      tf_vars_file: varfiles/dev.tfvars
      gh_environment: dev
      task_container_name: "l3-api-ai"
      task_container_version: ${{ github.sha }}
      task_container_registry: ${{ vars.ACR_REGISTRY }}
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      azure_acr_username: ${{ secrets.AZURE_USERNAME }}
      azure_acr_password: ${{ secrets.AZURE_PASSWORD }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      github_personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  Init_Prod:
    runs-on: ubuntu-latest
    needs: [Build, Deploy_dev]
    environment: prod
    steps:
      - name: "Say Hello Mona it's Prod"
        run: echo "Start Prod"

  Plan_prod:
    needs: Init_Prod
    if: github.ref == 'refs/heads/main'
    uses: l3vels/L3AGI/.github/workflows/tf_plan_server.yml@deploy
    with:
      path: apps/server/terraform
      tf_vars_file: varfiles/prod.tfvars
      gh_environment: prod
      task_container_name: "l3-api-ai"
      task_container_version: ${{ github.sha }}
      task_container_registry: ${{ vars.ACR_REGISTRY }}
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      azure_acr_username: ${{ secrets.AZURE_USERNAME }}
      azure_acr_password: ${{ secrets.AZURE_PASSWORD }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure_client_id: "${{ secrets.AZURE_CLIENT_ID }}"
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      github_personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  Deploy_prod:
    needs: [Build, Plan_prod]
    uses: l3vels/L3AGI/.github/workflows/tf_apply_server.yml@deploy
    with:
      path: apps/server/terraform
      tf_vars_file: varfiles/prod.tfvars
      gh_environment: prod
      task_container_name: "l3-api-ai"
      task_container_version: ${{ github.sha }}
      task_container_registry: ${{ vars.ACR_REGISTRY }}
    secrets:
      cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      azure_acr_username: ${{ secrets.AZURE_USERNAME }}
      azure_acr_password: ${{ secrets.AZURE_PASSWORD }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      github_personal_access_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}